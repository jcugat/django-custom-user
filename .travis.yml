# Config file for automatic testing at travis-ci.org

language: python

services:
  - mysql

addons:
  postgresql: "9.4"

env:
  global:
    - PYTHONPATH=$TRAVIS_BUILD_DIR

jobs:
  include:
    - python: "2.7"
      env: TOX_ENV="py27-django15-mysql"
    - python: "2.7"
      env: TOX_ENV="py27-django15-postgres"
    - python: "2.7"
      env: TOX_ENV="py27-django15-sqlite"
    - python: "2.7"
      env: TOX_ENV="py27-django16-mysql"
    - python: "2.7"
      env: TOX_ENV="py27-django16-postgres"
    - python: "2.7"
      env: TOX_ENV="py27-django16-sqlite"
    - python: "2.7"
      env: TOX_ENV="py27-django17-mysql"
    - python: "2.7"
      env: TOX_ENV="py27-django17-postgres"
    - python: "2.7"
      env: TOX_ENV="py27-django17-sqlite"
    - python: "2.7"
      env: TOX_ENV="py27-django18-mysql"
    - python: "2.7"
      env: TOX_ENV="py27-django18-postgres"
    - python: "2.7"
      env: TOX_ENV="py27-django18-sqlite"
    - python: "2.7"
      env: TOX_ENV="py27-django19-mysql"
    - python: "2.7"
      env: TOX_ENV="py27-django19-postgres"
    - python: "2.7"
      env: TOX_ENV="py27-django19-sqlite"
    - python: "2.7"
      env: TOX_ENV="py27-django110-mysql"
    - python: "2.7"
      env: TOX_ENV="py27-django110-postgres"
    - python: "2.7"
      env: TOX_ENV="py27-django110-sqlite"
    - python: "2.7"
      env: TOX_ENV="py27-djangomaster-mysql"
    - python: "2.7"
      env: TOX_ENV="py27-djangomaster-postgres"
    - python: "2.7"
      env: TOX_ENV="py27-djangomaster-sqlite"
    - python: "3.4"
      env: TOX_ENV="py34-django15-mysql"
    - python: "3.4"
      env: TOX_ENV="py34-django15-postgres"
    - python: "3.4"
      env: TOX_ENV="py34-django15-sqlite"
    - python: "3.4"
      env: TOX_ENV="py34-django16-mysql"
    - python: "3.4"
      env: TOX_ENV="py34-django16-postgres"
    - python: "3.4"
      env: TOX_ENV="py34-django16-sqlite"
    - python: "3.4"
      env: TOX_ENV="py34-django17-mysql"
    - python: "3.4"
      env: TOX_ENV="py34-django17-postgres"
    - python: "3.4"
      env: TOX_ENV="py34-django17-sqlite"
    - python: "3.4"
      env: TOX_ENV="py34-django18-mysql"
    - python: "3.4"
      env: TOX_ENV="py34-django18-postgres"
    - python: "3.4"
      env: TOX_ENV="py34-django18-sqlite"
    - python: "3.4"
      env: TOX_ENV="py34-django19-mysql"
    - python: "3.4"
      env: TOX_ENV="py34-django19-postgres"
    - python: "3.4"
      env: TOX_ENV="py34-django19-sqlite"
    - python: "3.4"
      env: TOX_ENV="py34-django110-mysql"
    - python: "3.4"
      env: TOX_ENV="py34-django110-postgres"
    - python: "3.4"
      env: TOX_ENV="py34-django110-sqlite"
    - python: "3.4"
      env: TOX_ENV="py34-djangomaster-mysql"
    - python: "3.4"
      env: TOX_ENV="py34-djangomaster-postgres"
    - python: "3.4"
      env: TOX_ENV="py34-djangomaster-sqlite"
    - python: "3.5"
      env: TOX_ENV="py35-django18-mysql"
    - python: "3.5"
      env: TOX_ENV="py35-django18-postgres"
    - python: "3.5"
      env: TOX_ENV="py35-django18-sqlite"
    - python: "3.5"
      env: TOX_ENV="py35-django19-mysql"
    - python: "3.5"
      env: TOX_ENV="py35-django19-postgres"
    - python: "3.5"
      env: TOX_ENV="py35-django19-sqlite"
    - python: "3.5"
      env: TOX_ENV="py35-django110-mysql"
    - python: "3.5"
      env: TOX_ENV="py35-django110-postgres"
    - python: "3.5"
      env: TOX_ENV="py35-django110-sqlite"
    - python: "3.5"
      env: TOX_ENV="py35-djangomaster-mysql"
    - python: "3.5"
      env: TOX_ENV="py35-djangomaster-postgres"
    - python: "3.5"
      env: TOX_ENV="py35-djangomaster-sqlite"
    - python: "3.5"
      env: TOX_ENV="pylama"

  # Put all *-djangomaster-* here
  allow_failures:
    - env: TOX_ENV="py27-djangomaster-mysql"
    - env: TOX_ENV="py27-djangomaster-postgres"
    - env: TOX_ENV="py27-djangomaster-sqlite"
    - env: TOX_ENV="py34-djangomaster-mysql"
    - env: TOX_ENV="py34-djangomaster-postgres"
    - env: TOX_ENV="py34-djangomaster-sqlite"
    - env: TOX_ENV="py35-djangomaster-mysql"
    - env: TOX_ENV="py35-djangomaster-postgres"
    - env: TOX_ENV="py35-djangomaster-sqlite"

# command to install dependencies, e.g. pip install -r requirements.txt --use-mirrors
install:
  - pip install -r requirements.txt

# command to run tests using coverage, e.g. python setup.py test
script: tox -e $TOX_ENV

# report coverage to codecov.io
after_success:
  - tox -e coverage
  - bash <(curl -s https://codecov.io/bash)
